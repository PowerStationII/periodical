<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ExpertInfoMapper">
	<resultMap id="BaseResultMap" type="ExpertInfo">
	  <id column="ID" jdbcType="DECIMAL" property="id" />
	  <result column="expert_id" jdbcType="VARCHAR" property="expertId" />
	  <result column="expert_name" jdbcType="VARCHAR" property="expertName" />
	  <result column="state" jdbcType="VARCHAR" property="state" />
	  <result column="extend_1" jdbcType="VARCHAR" property="extend1" />
	  <result column="extend_2" jdbcType="VARCHAR" property="extend2" />
	  <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
	  <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Page_Query_Begin">
    select * from(select t.*,rownum rn from(
  </sql>
  <sql id="Page_Query_End">
  	) t where rownum &lt;= ${endRow}) where rn &gt; ${startRow}
  </sql>
  <sql id="Example_Where_Clause">
    <where>
      <trim prefix="(" prefixOverrides="and" suffix=")">
      <if test="expertId != null" >
	      and expert_id = #{expertId,jdbcType=VARCHAR}
	    </if>
      <if test="expertName != null" >
	      and expert_name = #{expertName,jdbcType=VARCHAR}
	    </if>
      <if test="state != null" >
	      and state = #{state,jdbcType=VARCHAR}
	    </if>
      <if test="extend1 != null" >
	      and extend_1 = #{extend1,jdbcType=VARCHAR}
	    </if>
      <if test="extend2 != null" >
	      and extend_2 = #{extend2,jdbcType=VARCHAR}
	    </if>
      <if test="createTime != null" >
	      and create_time = #{createTime,jdbcType=TIMESTAMP}
	    </if>
      <if test="updateTime != null" >
	      and update_time = #{updateTime,jdbcType=TIMESTAMP}
	    </if>
	  </trim>
    </where>
  </sql>
  <sql id="Example_Set_Clause">
    <set>
      <trim suffixOverrides=",">
      <if test="expertId != null">
        expert_id = #{expertId,jdbcType=VARCHAR},
      </if>
      <if test="expertName != null">
        expert_name = #{expertName,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="extend1 != null">
        extend_1 = #{extend1,jdbcType=VARCHAR},
      </if>
      <if test="extend2 != null">
        extend_2 = #{extend2,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      </trim>
    </set>
  </sql>
  <sql id="Base_Column_List">
    id,
    expert_id,
    expert_name,
    state,
    extend_1,
    extend_2,
    create_time,
    update_time,
  </sql>
  <sql id="Base_Set_Clause">
    <set>
      <trim suffixOverrides=",">
        expert_id = #{expertId,jdbcType=VARCHAR},
        expert_name = #{expertName,jdbcType=VARCHAR},
        state = #{state,jdbcType=VARCHAR},
        extend_1 = #{extend1,jdbcType=VARCHAR},
        extend_2 = #{extend2,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </trim>
    </set>
  </sql>
  <sql id="Selective_Column_List">
    <!-- ID, -->
    <if test="expertId != null">
      expert_id,
    </if>
    <if test="expertName != null">
      expert_name,
    </if>
    <if test="state != null">
      state,
    </if>
    <if test="extend1 != null">
      extend_1,
    </if>
    <if test="extend2 != null">
      extend_2,
    </if>
    <if test="createTime != null">
      create_time,
    </if>
    <if test="updateTime != null">
      update_time,
    </if>
  </sql>
	<sql id="Base_Value_List">
    #{id,jdbcType=BIGINT},
    #{expertId,jdbcType=VARCHAR},
    #{expertName,jdbcType=VARCHAR},
    #{state,jdbcType=VARCHAR},
    #{extend1,jdbcType=VARCHAR},
    #{extend2,jdbcType=VARCHAR},
    #{createTime,jdbcType=TIMESTAMP},
    #{updateTime,jdbcType=TIMESTAMP},
	</sql>
  <sql id="Selective_Value_List">
    <!-- SEQ_expert_info.nextval, -->
    <if test="expertId != null">
      #{expertId,jdbcType=VARCHAR},
    </if>
    <if test="expertName != null">
      #{expertName,jdbcType=VARCHAR},
    </if>
    <if test="state != null">
      #{state,jdbcType=VARCHAR},
    </if>
    <if test="extend1 != null">
      #{extend1,jdbcType=VARCHAR},
    </if>
    <if test="extend2 != null">
      #{extend2,jdbcType=VARCHAR},
    </if>
    <if test="createTime != null">
      #{createTime,jdbcType=TIMESTAMP},
    </if>
    <if test="updateTime != null">
      #{updateTime,jdbcType=TIMESTAMP},
    </if>
  </sql>
  
  <select id="selectByExample" parameterType="ExpertInfoQuery" resultMap="BaseResultMap">
    select
    <trim suffixOverrides=",">
      <include refid="Base_Column_List" />
    </trim>
    from expert_info
    <include refid="Example_Where_Clause" />
    <!-- order by CREATE_DATE -->
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <trim suffixOverrides=",">
      <include refid="Base_Column_List" />
    </trim>
    from expert_info
    where ID = #{id,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from expert_info
    where ID = #{id,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="ExpertInfoQuery">
    delete from expert_info
    <include refid="Example_Where_Clause" />
  </delete>
  <insert id="insert" parameterType="ExpertInfo">
    insert into expert_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <include refid="Base_Column_List"/>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <include refid="Base_Value_List"/>
    </trim>
  </insert>
  <insert id="insertSelective" parameterType="ExpertInfo">
    insert into expert_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <include refid="Selective_Column_List"/>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <include refid="Selective_Value_List"/>
    </trim>
  </insert>
  <select id="countByExample" parameterType="ExpertInfoQuery" resultType="java.lang.Integer">
    select count(*) from expert_info
    <include refid="Example_Where_Clause" />
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="ExpertInfo">
    update expert_info
    <include refid="Example_Set_Clause"/>
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="ExpertInfo">
    update expert_info
    <include refid="Base_Set_Clause"/>
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  
  <select id="selectPageByExample" parameterType="ExpertInfoQuery" resultMap="BaseResultMap">
  	<include refid="Page_Query_Begin" />
    select
    <trim suffixOverrides=",">
      <include refid="Base_Column_List" />
    </trim>
    from expert_info
    <include refid="Example_Where_Clause" />
    <!-- order by CREATE_DATE -->
    <include refid="Page_Query_End" />
  </select>
</mapper>