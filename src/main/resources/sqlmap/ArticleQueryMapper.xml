<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ArticleQueryMapper">
	<resultMap id="ArticleInfosForEditorResultMap" type="ArticleQueryRespDto">
		<result column="articleId" jdbcType="VARCHAR" property="articleId" />
		<result column="title" jdbcType="VARCHAR" property="title" />
		<result column="authorName" jdbcType="VARCHAR" property="authorName" />
		<result column="contriTime" jdbcType="VARCHAR" property="contriTime" />
		<result column="editorState" jdbcType="VARCHAR" property="editorState" />
		<result column="expertState" jdbcType="VARCHAR" property="expertState" />
		<result column="authorState" jdbcType="VARCHAR" property="authorState" />
		<result column="section" jdbcType="VARCHAR" property="section" />
		<collection property="bizAuthorAddressInfos" select="selectBizAuthorAddressInfos" column="articleId}">
		</collection>
	</resultMap>
	
	<select id="selectBizAuthorAddressInfos" resultType="BizAuthorAddressInfo">
		select aui.id as au_id,aui.article_id as au_articleId,aui.author_name as au_authroName,aui.author_id as au_authorId,
		aui.academic_degree as au_academicDegree,aui.birthday as au_birthday,aui.certificate_no as au_certificateNo,aui.certificate_type as au_certificateType,
		aui.company_department as au_companyDepartment,aui.company_name as au_companyName, aui.compay_type as au_compayType,aui.degree as au_degree,aui.duties as au_duties,
		aui.email as au_email,aui.technical_title as au_technicalTitle,aui.sex as au_sex,aui.research_area as au_researchArea,aui.isreviewer as au_isreviewer,
		aui.isfirstauthor as au_isfirstauthor,aui.isContacter as au_isContacter,adi.address_id as ad_addressId,adi.contacter_mobile as ad_contacterMobile,
		adi.contacter_name as ad_contacterName,adi.contacter_telephone as ad_contacterTelephone,adi.receive_address as ad_receiveAddress,adi.receive_contacter as ad_receiveContacter,
		adi.receive_postcode as ad_receivePostcode,adi.ref_role_id as ad_refRoleId ,adi.id as ad_id
		from author_info aui ,address_info adi where aui.author_id=adi.ref_id
		and aui.article_id=#{articleId,jdbcType=VARCHAR}
	</select>
	


	<select id="selectArticleInfosForEditor" parameterType="ArticleQueryReqDto"
		resultMap="ArticleInfosForEditorResultMap">
		select ai.article_id as articleId,ai.article_cn_title as
		title,DATE_FORMAT(ai.create_time, '%Y-%m-%d') as
		contriTime,aui.author_name as authorName,
		ai.editor_state as editorState,ai.expert_state as
		expertState,ai.author_state as authorState,ai.invest_section as section
		from
		article_info
		ai,article_info_extend aie,author_info aui
		where
		ai.article_id=aie.article_id and ai.article_id=aui.article_id
        AND aui.article_id NOT IN (SELECT GROUP_FLAG FROM periodical_fanxiu_log)
        <if test="userId != null and ''!=userId">
			and aie.user_id = #{userId,jdbcType=VARCHAR}
		</if>
		<if test="roleId != null and ''!=roleId">
			and aie.role_id = #{roleId,jdbcType=VARCHAR}
		</if>
		<if test="editorState != null and ''!=editorState">
			and ai.editor_state = #{editorState,jdbcType=VARCHAR}
		</if>
		<if test="expertState != null and ''!=expertState">
			and ai.expert_state = #{expertState,jdbcType=VARCHAR}
		</if>
		<if test="articleId != null and ''!=articleId">
			and ai.article_id = #{articleId,jdbcType=VARCHAR}
		</if>
		<if test="articleCnTitle != null and ''!=articleCnTitle">
			and ai.article_cn_title =
			#{articleCnTitle,jdbcType=VARCHAR}
		</if>
		<if test="section != null and ''!=section">
			and ai.invest_section = #{section,jdbcType=VARCHAR}
		</if>
		<if test="creatTime != null and ''!=creatTime">
			and DATE_FORMAT(ai.create_time, '%Y-%m-%d') =
			#{creatTime,jdbcType=VARCHAR}
		</if>
		<if test="authorName != null and ''!=authorName">
			and #{authorName,jdbcType=VARCHAR} in (select
			aui.author_name)
-- 			group_concat(aui.author_name))
		</if>
		group by
		ai.article_id,ai.article_cn_title,DATE_FORMAT(ai.create_time,'%Y-%m-%d'),ai.editor_state,ai.expert_state,ai.invest_section
		order by ai.create_time desc
        limit #{pageSize},#{pageNo}
    </select>

    <select id="selectArticleInfosForEditorPage" parameterType="ArticleQueryReqDto"
            resultMap="ArticleInfosForEditorResultMap">
        select ai.article_id as articleId,ai.article_cn_title as
        title,DATE_FORMAT(ai.create_time, '%Y-%m-%d') as
        contriTime,aui.author_name as authorName,
        ai.editor_state as editorState,ai.expert_state as
        expertState,ai.author_state as authorState,ai.invest_section as section
        from
        article_info
        ai,article_info_extend aie,author_info aui
        where
        ai.article_id=aie.article_id and ai.article_id=aui.article_id
        AND aui.article_id NOT IN (SELECT GROUP_FLAG FROM periodical_fanxiu_log)
        <if test="userId != null and ''!=userId">
            and aie.user_id = #{userId,jdbcType=VARCHAR}
        </if>
        <if test="roleId != null and ''!=roleId">
            and aie.role_id = #{roleId,jdbcType=VARCHAR}
        </if>
        <if test="editorState != null and ''!=editorState">
            and ai.editor_state = #{editorState,jdbcType=VARCHAR}
        </if>
        <if test="expertState != null and ''!=expertState">
            and ai.expert_state = #{expertState,jdbcType=VARCHAR}
        </if>
        <if test="articleId != null and ''!=articleId">
            and ai.article_id like CONCAT( '%',#{articleId,jdbcType=VARCHAR} ,'%')
        </if>
        <if test="articleCnTitle != null and ''!=articleCnTitle">
            and ai.article_cn_title like CONCAT( '%',#{articleCnTitle,jdbcType=VARCHAR} ,'%')
        </if>
        <if test="section != null and ''!=section">
            and ai.invest_section = #{section,jdbcType=VARCHAR}
        </if>
        <if test="creatTime != null and ''!=creatTime">
            and DATE_FORMAT(ai.create_time, '%Y-%m-%d') =
            #{creatTime,jdbcType=VARCHAR}
        </if>
        <if test="authorName != null and ''!=authorName">
            and #{authorName,jdbcType=VARCHAR} in (select
            aui.author_name)
        </if>
        group by
        ai.article_id,ai.article_cn_title,DATE_FORMAT(ai.create_time,'%Y-%m-%d'),ai.editor_state,ai.expert_state,ai.invest_section
        order by ai.create_time desc
        limit #{pageSize},#{pageNo}
    </select>
    <select id="selectArticleInfosForEditorPageCount" parameterType="ArticleQueryReqDto"
            resultType="java.lang.Integer">
        select count(1)
        from
        article_info
        ai,article_info_extend aie,author_info aui
        where
        ai.article_id=aie.article_id and ai.article_id=aui.article_id
        AND aui.article_id NOT IN (SELECT GROUP_FLAG FROM periodical_fanxiu_log)
        <if test="userId != null and ''!=userId">
            and aie.user_id = #{userId,jdbcType=VARCHAR}
        </if>
        <if test="roleId != null and ''!=roleId">
            and aie.role_id = #{roleId,jdbcType=VARCHAR}
        </if>
        <if test="editorState != null and ''!=editorState">
            and ai.editor_state = #{editorState,jdbcType=VARCHAR}
        </if>
        <if test="expertState != null and ''!=expertState">
            and ai.expert_state = #{expertState,jdbcType=VARCHAR}
        </if>
        <if test="articleId != null and ''!=articleId">
            and ai.article_id like CONCAT( '%',#{articleId,jdbcType=VARCHAR} ,'%')
        </if>
        <if test="articleCnTitle != null and ''!=articleCnTitle">
            and ai.article_cn_title like CONCAT( '%',#{articleCnTitle,jdbcType=VARCHAR} ,'%')
        </if>
        <if test="section != null and ''!=section">
            and ai.invest_section = #{section,jdbcType=VARCHAR}
        </if>
        <if test="creatTime != null and ''!=creatTime">
            and DATE_FORMAT(ai.create_time, '%Y-%m-%d') =
            #{creatTime,jdbcType=VARCHAR}
        </if>
        <if test="authorName != null and ''!=authorName">
            and #{authorName,jdbcType=VARCHAR} in (select
            aui.author_name)
        </if>
--         group by
--         ai.article_id,ai.article_cn_title,DATE_FORMAT(ai.create_time,'%Y-%m-%d'),ai.editor_state,ai.expert_state,ai.invest_section
    </select>
	<!--<select id="selectArticleInfosForEditor" parameterType="ArticleQueryReqDto"-->
		<!--resultMap="ArticleInfosForEditorResultMap">-->
		<!--select ai.article_id as articleId,ai.article_cn_title as-->
		<!--title,DATE_FORMAT(ai.create_time, '%Y-%m-%d') as-->
		<!--contriTime,aui.author_name as authorName,-->
		<!--ai.editor_state as editorState,ai.expert_state as-->
		<!--expertState,ai.author_state as authorState,ai.invest_section as section-->
		<!--from-->
		<!--article_info-->
		<!--ai,article_info_extend aie,author_info aui-->
		<!--where-->
		<!--ai.article_id=aie.article_id and ai.article_id=aui.article_id-->
        <!--AND aui.article_id NOT IN (SELECT GROUP_FLAG FROM periodical_fanxiu_log)-->
        <!--<if test="userId != null and ''!=userId">-->
			<!--and aie.user_id = #{userId,jdbcType=VARCHAR}-->
		<!--</if>-->
		<!--<if test="roleId != null and ''!=roleId">-->
			<!--and aie.role_id = #{roleId,jdbcType=VARCHAR}-->
		<!--</if>-->
		<!--<if test="editorState != null and ''!=editorState">-->
			<!--and ai.editor_state = #{editorState,jdbcType=VARCHAR}-->
		<!--</if>-->
		<!--<if test="expertState != null and ''!=expertState">-->
			<!--and ai.expert_state = #{expertState,jdbcType=VARCHAR}-->
		<!--</if>-->
		<!--<if test="articleId != null and ''!=articleId">-->
			<!--and ai.article_id = #{articleId,jdbcType=VARCHAR}-->
		<!--</if>-->
		<!--<if test="articleCnTitle != null and ''!=articleCnTitle">-->
			<!--and ai.article_cn_title =-->
			<!--#{articleCnTitle,jdbcType=VARCHAR}-->
		<!--</if>-->
		<!--<if test="section != null and ''!=section">-->
			<!--and ai.invest_section = #{section,jdbcType=VARCHAR}-->
		<!--</if>-->
		<!--<if test="creatTime != null and ''!=creatTime">-->
			<!--and DATE_FORMAT(ai.create_time, '%Y-%m-%d') =-->
			<!--#{creatTime,jdbcType=VARCHAR}-->
		<!--</if>-->
		<!--<if test="authorName != null and ''!=authorName">-->
			<!--and #{authorName,jdbcType=VARCHAR} in (select-->
			<!--aui.author_name)-->
		<!--</if>-->
		<!--group by-->
		<!--ai.article_id,ai.article_cn_title,DATE_FORMAT(ai.create_time,'%Y-%m-%d'),ai.editor_state,ai.expert_state,ai.invest_section-->
		<!--order by ai.create_time desc-->
	<!--</select>-->

	
	<select id="selectArticleInfosForExpert" parameterType="ArticleQueryReqDto"
		resultMap="ArticleInfosForEditorResultMap">
		select temp1.article_id as articleId,temp1.article_cn_title as
		title,DATE_FORMAT(temp1.create_time, '%Y-%m-%d') as contriTime,
		temp1.authorName as authorName,temp1.editor_state as
		editorState,temp1.expert_state as expertState,temp1.invest_section as
		section from (
		select ai.article_id ,ai.article_cn_title
		,ai.create_time,aui.author_name as authorName,
-- 		,ai.create_time,group_concat(aui.author_name) as authorName,
		ai.editor_state ,ai.expert_state ,ai.invest_section
		from
		article_info
		ai,author_info aui
		where ai.article_id=aui.article_id
		group by ai.article_id) as temp1 ,(
		select aie.article_id,max(if(aie.role_id='1003',aie.user_id,'')) as
		expertId, max(if(aie.role_id='1006',aie.user_id,'')) as editorId,
		max(if(aie.role_id='1001',aie.user_id,'')) as userId from
		article_info_extend aie
		group by aie.article_id) as temp2
		where temp1.article_id=temp2.article_id
		<if test="userId != null and ''!=userId">
			and temp2.expertId = #{userId,jdbcType=VARCHAR}
		</if>
		<if test="editorState != null and ''!=editorState">
			and temp1.editor_state = #{editorState,jdbcType=VARCHAR}
		</if>
		<if test="expertState != null and ''!=expertState">
			and temp1.expert_state = #{expertState,jdbcType=VARCHAR}
		</if>
		<if test="articleId != null and ''!=articleId">
			and temp1.article_id = #{articleId,jdbcType=VARCHAR}
		</if>
		<if test="articleCnTitle != null and ''!=articleCnTitle">
			and temp1.article_cn_title =
			#{articleCnTitle,jdbcType=VARCHAR}
		</if>
		<if test="section != null and ''!=section">
			and temp1.invest_section = #{section,jdbcType=VARCHAR}
		</if>
		<if test="creatTime != null and ''!=creatTime">
			and DATE_FORMAT(temp1.create_time, '%Y-%m-%d') =
			#{creatTime,jdbcType=VARCHAR}
		</if>
		<if test="authorName != null and ''!=authorName">
			and  INSTR(temp1.authorName,#{authorName,jdbcType=VARCHAR})
		</if>
		group by temp1.article_id
	</select>
	<select id="selectArticleInfosForExpertPage" parameterType="ArticleQueryReqDto"
		resultMap="ArticleInfosForEditorResultMap">
		select temp1.article_id as articleId,temp1.article_cn_title as
		title,DATE_FORMAT(temp1.create_time, '%Y-%m-%d') as contriTime,
		temp1.authorName as authorName,temp1.editor_state as
		editorState,temp1.expert_state as expertState,temp1.invest_section as
		section from (
		select ai.article_id ,ai.article_cn_title
		,ai.create_time,aui.author_name as authorName,
-- 		,ai.create_time,group_concat(aui.author_name) as authorName,
		ai.editor_state ,ai.expert_state ,ai.invest_section
		from
		article_info
		ai,author_info aui
		where ai.article_id=aui.article_id
		group by ai.article_id) as temp1 ,(
		select aie.article_id,max(if(aie.role_id='1003',aie.user_id,'')) as
		expertId, max(if(aie.role_id='1006',aie.user_id,'')) as editorId,
		max(if(aie.role_id='1001',aie.user_id,'')) as userId from
		article_info_extend aie
		group by aie.article_id) as temp2
		where temp1.article_id=temp2.article_id
		<if test="userId != null and ''!=userId">
			and temp2.expertId = #{userId,jdbcType=VARCHAR}
		</if>
		<if test="editorState != null and ''!=editorState">
			and temp1.editor_state = #{editorState,jdbcType=VARCHAR}
		</if>
		<if test="expertState != null and ''!=expertState">
			and temp1.expert_state = #{expertState,jdbcType=VARCHAR}
		</if>
		<if test="articleId != null and ''!=articleId">
			and temp1.article_id = #{articleId,jdbcType=VARCHAR}
		</if>
		<if test="articleCnTitle != null and ''!=articleCnTitle">
			and temp1.article_cn_title =
			#{articleCnTitle,jdbcType=VARCHAR}
		</if>
		<if test="section != null and ''!=section">
			and temp1.invest_section = #{section,jdbcType=VARCHAR}
		</if>
		<if test="creatTime != null and ''!=creatTime">
			and DATE_FORMAT(temp1.create_time, '%Y-%m-%d') =
			#{creatTime,jdbcType=VARCHAR}
		</if>
		<if test="authorName != null and ''!=authorName">
			and  INSTR(temp1.authorName,#{authorName,jdbcType=VARCHAR})
		</if>
		group by temp1.article_id
        limit #{pageSize},#{pageNo}
	</select>
	<select id="selectArticleInfosForExpertPageCount" parameterType="ArticleQueryReqDto"
            resultType="java.lang.Integer">
		select count(1) from (
		select ai.article_id ,ai.article_cn_title
		,ai.create_time,aui.author_name as authorName,
		ai.editor_state ,ai.expert_state ,ai.invest_section
		from
		article_info
		ai,author_info aui
		where ai.article_id=aui.article_id
		group by ai.article_id) as temp1 ,(
		select aie.article_id,max(if(aie.role_id='1003',aie.user_id,'')) as
		expertId, max(if(aie.role_id='1006',aie.user_id,'')) as editorId,
		max(if(aie.role_id='1001',aie.user_id,'')) as userId from
		article_info_extend aie
		group by aie.article_id) as temp2
		where temp1.article_id=temp2.article_id
		<if test="userId != null and ''!=userId">
			and temp2.expertId = #{userId,jdbcType=VARCHAR}
		</if>
		<if test="editorState != null and ''!=editorState">
			and temp1.editor_state = #{editorState,jdbcType=VARCHAR}
		</if>
		<if test="expertState != null and ''!=expertState">
			and temp1.expert_state = #{expertState,jdbcType=VARCHAR}
		</if>
		<if test="articleId != null and ''!=articleId">
			and temp1.article_id = #{articleId,jdbcType=VARCHAR}
		</if>
		<if test="articleCnTitle != null and ''!=articleCnTitle">
			and temp1.article_cn_title =
			#{articleCnTitle,jdbcType=VARCHAR}
		</if>
		<if test="section != null and ''!=section">
			and temp1.invest_section = #{section,jdbcType=VARCHAR}
		</if>
		<if test="creatTime != null and ''!=creatTime">
			and DATE_FORMAT(temp1.create_time, '%Y-%m-%d') =
			#{creatTime,jdbcType=VARCHAR}
		</if>
		<if test="authorName != null and ''!=authorName">
			and  INSTR(temp1.authorName,#{authorName,jdbcType=VARCHAR})
		</if>
-- 		group by temp1.article_id
	</select>

	<!-- <resultMap id="ArticleInfoDetailResultMap" type="ArticleQueryRespDto">
		<result column="articleId" jdbcType="VARCHAR" property="articleId" />
		<result column="title" jdbcType="VARCHAR" property="title" />
		<result column="editorState" jdbcType="VARCHAR" property="editorState" />
		<result column="expertState" jdbcType="VARCHAR" property="expertState" />
		<result column="authorState" jdbcType="VARCHAR" property="authorState" />
		<result column="enTitle" jdbcType="VARCHAR" property="enTitle" />
		<result column="fNums" jdbcType="VARCHAR" property="fNums" />
		<result column="section" jdbcType="VARCHAR" property="section" />
		<result column="cnKeywords" jdbcType="VARCHAR" property="cnKeywords" />
		<result column="enKeywords" jdbcType="VARCHAR" property="enKeywords" />
		<result column="cnSummary" jdbcType="VARCHAR" property="cnSummary" />
		<result column="enSummary" jdbcType="VARCHAR" property="enSummary" />
		<result column="attachName" jdbcType="VARCHAR" property="attachName" />
		<result column="attachPath" jdbcType="VARCHAR" property="attachPath" />
		<result column="authorName" jdbcType="VARCHAR" property="authorName" />
		<result column="expertDownload" jdbcType="VARCHAR" property="expertDownload" />
		<result column="editorDownload" jdbcType="VARCHAR" property="editorDownload" />
	</resultMap> -->
	<select id="selectArticleInfoDetail" parameterType="ArticleQueryReqDto"
		resultType="ArticleQueryRespDto">
		select ai.article_id as articleId,ai.article_cn_title as title,
		ai.editor_state as editorState,ai.expert_state as
		expertState,ai.author_state as authorState,
		ai.article_en_tile as
		enTitle,ai.classification_nums as fNums,ai.article_cn_keywords as cnKeywords,
		ai.article_en_keywords as
		enKeywords,ai.article_cn_summary as
		cnSummary,
		ai.article_en_summary as
		enSummary,aai.attachment_name as attachName,
		aai.attachment_path as
		attachPath,aui.author_name as authorName,
-- 		attachPath,group_concat(aui.author_name) as authorName,
		DATE_FORMAT(ai.create_time , '%Y-%m-%d') as contriTime
		,ais.editor_download as editorDownload,ais.expert_download as expertDownload
		,si.section_name as section
		from
		article_info ai,article_info_extend aie,article_attachment_info
		aai,author_info aui,article_info_state ais,section_info si
		
		where si.section_id=ai.invest_section and ai.article_id=aie.article_id and
		ai.article_id=aai.article_id and aui.article_id=ai.article_id
		and ais.article_id=ai.article_id and
		aai.type=#{roleId,jdbcType=VARCHAR}
		and ai.article_id=#{articleId,jdbcType=VARCHAR}
		<if test="editorState != null">
			and ai.editor_state = #{editorState,jdbcType=VARCHAR}
		</if>
		<if test="expertState != null">
			and ai.expert_state = #{expertState,jdbcType=VARCHAR}
		</if>
		<if test="authorState != null">
			and ai.author_state = #{authorState,jdbcType=VARCHAR}
		</if>
		<if test="userId != null">
			and aie.user_id = #{userId,jdbcType=VARCHAR}
		</if>
		group by ai.article_id ,ai.article_cn_title ,
		ai.article_en_tile
		,ai.classification_nums,
		ai.invest_section ,ai.article_cn_keywords ,
		ai.article_en_keywords ,ai.article_cn_summary ,
		ai.article_en_summary
		,aai.attachment_name,
		aai.attachment_path,ai.expert_state,ai.editor_state,ai.author_state
	</select>


	<resultMap type="AuthorQueryDetail" id="AuthorQueryDetailResult">
		<result column="articleId" jdbcType="VARCHAR" property="articleId" />
		<result column="authorState" jdbcType="VARCHAR" property="authorState" />
		<result column="articleCnTitle" jdbcType="VARCHAR" property="articleCnTitle" />
		<result column="articleEnTile" jdbcType="VARCHAR" property="articleEnTile" />
		<result column="articleCnKeywords" jdbcType="VARCHAR" property="articleCnKeywords" />
		<result column="articleEnKeywords" jdbcType="VARCHAR" property="articleEnKeywords" />
		<result column="articleCnSummary" jdbcType="VARCHAR" property="articleCnSummary" />
		<result column="articleEnSummary" jdbcType="VARCHAR" property="articleEnSummary" />
		<result column="attachmentName" jdbcType="VARCHAR" property="attachmentName" />
		<result column="attachmentPath" jdbcType="VARCHAR" property="attachmentPath" />
		<result column="refId" jdbcType="VARCHAR" property="refId" />
		<result column="dealStartTime" jdbcType="VARCHAR" property="dealStartTime" />
		<result column="expertName" jdbcType="VARCHAR" property="expertName" />
		<result column="cNums" jdbcType="VARCHAR" property="cNums" />
		<result column="section" jdbcType="VARCHAR" property="section" />
		<result column="payTime" jdbcType="VARCHAR" property="payTime" />
	</resultMap>
	<select id="authorQueryDetail" resultMap="AuthorQueryDetailResult"
		parameterType="String">
		select
		ai.article_id as articleId,
		ai.author_state as authorState,
		ai.article_cn_title as articleCnTitle,
		ai.article_en_tile	as articleEnTile,
		ai.classification_nums as classificationNums,
		ai.article_cn_keywords as articleCnKeywords,
		ai.article_en_keywords as articleEnKeywords,
		ai.article_cn_summary as articleCnSummary,
		ai.classification_nums as cNums,
		ai.article_en_summary as articleEnSummary,
		ai.classification_nums as cNums,
		ai.article_en_summary as articleEnSummary,
		ai.isfund as isfund,
		ai.total_pages as totalPages,
		ai.total_pics as totalPics,
		ai.total_tabs as totalTabs,
		ai.remark as remark,
		ai.reference_doc as referenceDoc,
		ai.editor_state as editorState,
-- 		aai.attachment_name as attachmentName,
-- 		aai.attachment_path as attachmentPath,
-- 		af.ref_id as refId,
		DATE_FORMAT(af.deal_start_time, '%Y-%m-%d') as dealStartTime,
		ei.expert_name as expertName,
		si.section_name as section
		from article_info ai,
-- 		article_attachment_info aai,
		article_flows af,
		expert_info ei,
		user_info ui,
		section_info si
		where
-- 		af.ref_id=ui.user_id and
		ui.ref_id=ei.expert_id
		and si.section_id=ai.invest_section and
-- 		ai.article_id=aai.article_id and
		ai.article_id=#{articleId,jdbcType=VARCHAR} 
		group by ai.article_id
	</select>
	<!-- and aai.type='1006' -->
	<!-- and af.article_id=ai.article_id and af.role_id='1003' -->

	<select id="articleFeeQuery" resultMap="AuthorQueryDetailResult"
		parameterType="AuthorQueryDetail">
		select aci.author_real_amount as
		aRealAmount,DATE_FORMAT(aci.pay_time, '%Y-%m-%d') as
		payTime,aci.author_amount as
		aAmount,aci.author_tax_amount as
		aTaxAmount,ai.article_id as
		articleId,ai.author_state as
		authorState,ai.article_cn_title as
		articleCnTitle,
		ai.article_en_tile as
		articleEnTile,ai.classification_nums as classificationNums,
		ai.article_cn_keywords as articleCnKeywords,ai.article_en_keywords as
		articleEnKeywords,
		ai.article_cn_summary as
		articleCnSummary,ai.invest_section as
		section,ai.classification_nums as
		cNums,
		ai.article_en_summary as articleEnSummary,aci.expert_real_amount
		as
		eRealAmount,aci.expert_amount as eAmount,aci.expert_tax_amount as
		eTaxAmount
		from account_info aci,article_info ai,article_info_extend
		aie
		where aci.article_id=ai.article_id and ai.article_id=aie.article_id
		and aie.user_id=#{userId,jdbcType=VARCHAR}
		<if test="articleId != null">
			and ai.article_id = #{articleId,jdbcType=VARCHAR}
		</if>
	</select>

<!-- 	<resultMap type="EditorQueryArtilces" id="EditorQueryDetailResult">
		<result column="articleId" jdbcType="VARCHAR" property="articleId" />
		<result column="cnTitle" jdbcType="VARCHAR" property="cnTitle" />
		<result column="expertState" jdbcType="VARCHAR" property="expertState" />
		<result column="cnKeywords" jdbcType="VARCHAR" property="cnKeywords" />
		<result column="state" jdbcType="VARCHAR" property="state" />
		<result column="section" jdbcType="VARCHAR" property="section" />
		<result column="createTime" jdbcType="VARCHAR" property="createTime" />
		<result column="authorNames" jdbcType="VARCHAR" property="authorNames" />
		<result column="expertNames" jdbcType="VARCHAR" property="expertNames" />
	</resultMap> -->
	<!-- 编辑-稿件查询 -->
	<select id="editorQueryArticles" resultType="EditorQueryArtilces"
		parameterType="EditorQueryArtilces">
		select auLin.article_id as articleId,auLin.article_cn_title as
		cnTitle,auLin.expert_state as expertState,auLin.article_cn_keywords as
		cnKeywords,auLin.editor_state as state,auLin.invest_section as
		section,auLin.create_time as createTime,auLin.authorNames as
		authorNames,exLin.expert_name as expertNames from (
		select
		ari.article_id,ari.article_cn_title,ari.article_cn_keywords,ari.editor_state,ari.expert_state,ari.invest_section,ari.create_time,author_name
-- 		ari.article_id,ari.article_cn_title,ari.article_cn_keywords,ari.editor_state,ari.expert_state,ari.invest_section,ari.create_time,GROUP_CONCAT(author_name)
		as authorNames from article_info ari,author_info aui where
		ari.article_id=aui.article_id
		group by ari.article_id
		) as auLin,
		(select
		ari.article_id,ari.article_cn_title,ari.article_cn_keywords,ari.editor_state,ari.expert_state,ari.invest_section,ari.create_time,exi.expert_name
		from user_info usi,expert_info exi,article_info_extend
		aie,article_info ari
		where usi.ref_id=exi.expert_id and aie.user_id=usi.user_id and
		ari.article_id=aie.article_id) as exLin
		where auLin.article_id=exLin.article_id
		<if test="section != null and ''!= section">
			and auLin.invest_section= #{section,jdbcType=VARCHAR}
		</if>
		<if test="authorNames != null  and ''!= authorNames">
			and INSTR(auLin.authorNames,#{authorNames,jdbcType=VARCHAR})
		</if>
		<if test="createTime != null  and ''!= createTime">
			and DATE_FORMAT(auLin.create_time, '%Y-%m-%d')= #{createTime,jdbcType=VARCHAR}
		</if>
		<if test="expertNames != null  and ''!= expertNames">
			and exLin.expert_name= #{expertNames,jdbcType=VARCHAR}
		</if>
		<if test="cnTitle != null  and ''!= cnTitle">
			and auLin.article_cn_title= #{cnTitle,jdbcType=VARCHAR}
		</if>
		<if test="articleId != null  and ''!= articleId">
			and auLin.article_id= #{articleId,jdbcType=VARCHAR}
		</if>
		<if test="state != null  and ''!= state">
			and auLin.editor_state= #{state,jdbcType=VARCHAR}
		</if>
		<if test="expertState != null  and ''!= expertState">
			and auLin.expert_state= #{expertState,jdbcType=VARCHAR}
		</if>
		<if test="cnKeywords != null  and ''!= cnKeywords">
			and INSTR(auLin.article_cn_keywords,#{cnKeywords,jdbcType=VARCHAR})
		</if>
		order by auLin.create_time desc
	</select>
	<!-- 编辑-稿件查询 -->
	<select id="editorQueryArticlesPage" resultType="EditorQueryArtilces"
		parameterType="EditorQueryArtilces">
		select auLin.article_id as articleId,auLin.article_cn_title as
		cnTitle,auLin.expert_state as expertState,auLin.article_cn_keywords as
		cnKeywords,auLin.editor_state as state,auLin.invest_section as
		section,DATE_FORMAT(auLin.create_time,'%Y-%m-%d') as createTime,auLin.authorNames as
		authorNames,exLin.expert_name as expertNames from (
		select
		ari.article_id,ari.article_cn_title,ari.article_cn_keywords,ari.editor_state,ari.expert_state,ari.invest_section,ari.create_time,author_name
		as authorNames from article_info ari,author_info aui where
		ari.article_id=aui.article_id
		group by ari.article_id
		) as auLin,
		(select
		ari.article_id,ari.article_cn_title,ari.article_cn_keywords,ari.editor_state,ari.expert_state,ari.invest_section,ari.create_time,exi.expert_name
		from user_info usi,expert_info exi,article_info_extend
		aie,article_info ari
		where usi.ref_id=exi.expert_id and aie.user_id=usi.user_id and
		ari.article_id=aie.article_id) as exLin
		where auLin.article_id=exLin.article_id
		<if test="section != null and ''!= section">
			and auLin.invest_section= #{section,jdbcType=VARCHAR}
		</if>
		<if test="authorNames != null  and ''!= authorNames">
			and INSTR(auLin.authorNames,#{authorNames,jdbcType=VARCHAR})
		</if>
		<if test="createTime != null  and ''!= createTime">
			and DATE_FORMAT(auLin.create_time, '%Y-%m-%d')= #{createTime,jdbcType=VARCHAR}
		</if>
		<if test="expertNames != null  and ''!= expertNames">
			and exLin.expert_name= #{expertNames,jdbcType=VARCHAR}
		</if>
		<if test="cnTitle != null  and ''!= cnTitle">
			and auLin.article_cn_title= #{cnTitle,jdbcType=VARCHAR}
		</if>
		<if test="articleId != null  and ''!= articleId">
			and auLin.article_id= #{articleId,jdbcType=VARCHAR}
		</if>
		<if test="state != null  and ''!= state">
			and auLin.editor_state= #{state,jdbcType=VARCHAR}
		</if>
		<if test="expertState != null  and ''!= expertState">
			and auLin.expert_state= #{expertState,jdbcType=VARCHAR}
		</if>
		<if test="cnKeywords != null  and ''!= cnKeywords">
			and INSTR(auLin.article_cn_keywords,#{cnKeywords,jdbcType=VARCHAR})
		</if>
		order by auLin.create_time desc
        limit #{pageSize},#{pageNo}
	</select>
	<select id="editorQueryArticlesPageCount" resultType="java.lang.Integer"
		parameterType="EditorQueryArtilces">
		select count(1) from (
		select
		ari.article_id,ari.article_cn_title,ari.article_cn_keywords,ari.editor_state,ari.expert_state,ari.invest_section,ari.create_time,author_name
-- 		ari.article_id,ari.article_cn_title,ari.article_cn_keywords,ari.editor_state,ari.expert_state,ari.invest_section,ari.create_time,GROUP_CONCAT(author_name)
		as authorNames from article_info ari,author_info aui where
		ari.article_id=aui.article_id
		group by ari.article_id
		) as auLin,
		(select
		ari.article_id,ari.article_cn_title,ari.article_cn_keywords,ari.editor_state,ari.expert_state,ari.invest_section,ari.create_time,exi.expert_name
		from user_info usi,expert_info exi,article_info_extend
		aie,article_info ari
		where usi.ref_id=exi.expert_id and aie.user_id=usi.user_id and
		ari.article_id=aie.article_id) as exLin
		where auLin.article_id=exLin.article_id
		<if test="section != null and ''!= section">
			and auLin.invest_section= #{section,jdbcType=VARCHAR}
		</if>
		<if test="authorNames != null  and ''!= authorNames">
			and INSTR(auLin.authorNames,#{authorNames,jdbcType=VARCHAR})
		</if>
		<if test="createTime != null  and ''!= createTime">
			and DATE_FORMAT(auLin.create_time, '%Y-%m-%d')= #{createTime,jdbcType=VARCHAR}
		</if>
		<if test="expertNames != null  and ''!= expertNames">
			and exLin.expert_name= #{expertNames,jdbcType=VARCHAR}
		</if>
		<if test="cnTitle != null  and ''!= cnTitle">
			and auLin.article_cn_title= #{cnTitle,jdbcType=VARCHAR}
		</if>
		<if test="articleId != null  and ''!= articleId">
			and auLin.article_id= #{articleId,jdbcType=VARCHAR}
		</if>
		<if test="state != null  and ''!= state">
			and auLin.editor_state= #{state,jdbcType=VARCHAR}
		</if>
		<if test="expertState != null  and ''!= expertState">
			and auLin.expert_state= #{expertState,jdbcType=VARCHAR}
		</if>
		<if test="cnKeywords != null  and ''!= cnKeywords">
			and INSTR(auLin.article_cn_keywords,#{cnKeywords,jdbcType=VARCHAR})
		</if>
	</select>

	
	<!-- 英文专家审核稿件查询start -->
	
	<select id="articleDetailForEnExpert" resultType="AuthorQueryDetail"
		parameterType="AuthorQueryDetail">
		select 
		ai.article_id as articleId,
        ai.article_cn_title as articleCnTitle,
		ai.article_cn_summary as articleCnSummary,
        ai.article_cn_keywords as articleCnKeywords,
		ai.article_en_keywords as articleEnKeywords,
        ai.article_en_summary   as articleEnSummary ,
        ai.article_en_tile as articleEnTile,
		aai.attachment_name as attachmentName,
        aai.attachment_path as attachmentPath
		from periodical_details pd,article_info ai,article_attachment_info aai
		where pd.article_id=ai.article_id and aai.article_id=ai.article_id and aai.type='1006' and ai.expert_state='0003' and ai.editor_state='0008'
		<if test="articleId != null  and ''!= articleId">
			and ai.article_id= #{articleId,jdbcType=VARCHAR}
		</if>
		<if test="periodicalId != null  and ''!= periodicalId">
			and pd.periodical_id= #{periodicalId,jdbcType=VARCHAR}
		</if>
		<if test="periodicalIssueNo != null  and ''!= periodicalIssueNo">
			and pd.periodical_issue_no= #{periodicalIssueNo,jdbcType=VARCHAR}
		</if>
	</select>
	
	
	
	<!-- 编辑待刊明细页 -->
	<select id="EditorDKMXPage" resultType="ArticleQueryRespDto"
		parameterType="ArticleQueryReqDto">
		select temp1.article_id as articleId,temp1.article_cn_title as title,DATE_FORMAT(temp1.create_time, '%Y-%m-%d') as contriTime, temp1.authorName as authorName,temp1.editor_state as editorState,temp1.expert_state as expertState,temp1.invest_section as section ,temp2.expertId as expertId,temp3.authorAttachementPath as authorAttachementPath,temp3.editorAttachementPath as editorAttachementPath,
        temp4.editorDKSJ,temp4.expertDKSJ,temp4.expertDKYJ ,temp4.expertTGYJ

		from ( 
		select ai.article_id ,ai.article_cn_title ,ai.create_time,aui.author_name as authorName, ai.editor_state ,ai.expert_state ,ai.invest_section from article_info ai,author_info aui where ai.article_id=aui.article_id group by ai.article_id) as temp1 ,
-- 		select ai.article_id ,ai.article_cn_title ,ai.create_time,group_concat(aui.author_name) as authorName, ai.editor_state ,ai.expert_state ,ai.invest_section from article_info ai,author_info aui where ai.article_id=aui.article_id group by ai.article_id) as temp1 ,

		( select aie.article_id,max(if(aie.role_id='1003',aie.user_id,'')) as expertId, max(if(aie.role_id='1006',aie.user_id,'')) as editorId, max(if(aie.role_id='1001',aie.user_id,'')) as userId from article_info_extend aie group by aie.article_id) as temp2 ,
		
		(select aai.article_id,max(if(aai.type='1003',aai.attachment_path,'')) as expertAttachementPath, 
		max(if(aai.type='1006',aai.attachment_path,'')) as editorAttachementPath, 
		max(if(aai.type='1001',aai.attachment_path,'')) as authorAttachementPath from article_attachment_info aai group by aai.article_id) as temp3,
		
		(select af.article_id,
		max(if(af.role_id='1003' and af.deal_state='0001',af.deal_start_time,'')) as expertDKSJ, 
		max(if(af.role_id='1006' and af.deal_state='0001',af.deal_start_time,'')) as editorDKSJ,
		max(if(af.role_id='1003' and af.deal_state='0002',af.deal_start_time,'')) as expertFXSJ,
		max(if(af.role_id='1003' and af.deal_state='0003',af.deal_start_time,'')) as expertTGSJ,
		max(if(af.role_id='1006' and af.deal_state='0002',af.deal_start_time,'')) as editorFXSJ,
		max(if(af.role_id='1006' and af.deal_state='0003',af.deal_start_time,'')) as editorTGSJ,
		
		max(if(af.role_id='1003' and af.deal_state='0006',af.deal_opinion,'')) as expertDKYJ, 
		max(if(af.role_id='1006' and af.deal_state='0001',af.deal_opinion,'')) as editorDKYJ,
		max(if(af.role_id='1003' and af.deal_state='0002',af.deal_opinion,'')) as expertFXYJ,
		max(if(af.role_id='1003' and af.deal_state='0003',af.deal_opinion,'')) as expertTGYJ,
		max(if(af.role_id='1006' and af.deal_state='0002',af.deal_opinion,'')) as editorFXYJ,
		max(if(af.role_id='1006' and af.deal_state='0003',af.deal_opinion,'')) as editorTGYJ
		
		from article_flows af group by af.article_id)as temp4
		
		where temp1.article_id=temp2.article_id and temp3.article_id=temp2.article_id 
		and temp4.article_id=temp2.article_id 
		<if test="articleId != null  and ''!= articleId">
			and temp1.article_id= #{articleId,jdbcType=VARCHAR}
		</if>
		 group by temp1.article_id 
		
	</select>
</mapper>